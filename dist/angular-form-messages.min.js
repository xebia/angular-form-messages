angular.module("angularFormMessages").directive("afField",["MESSAGE_TYPES","MessageService",function(a,b){return{priority:100,require:["ngModel","afField","^afSubmit","^form"],controller:function(){function b(a){return function(b){this.$messages[b]={type:a}}}this.$messages={},this.setError=b(a[3]),this.setWarning=b(a[2]),this.setInfo=b(a[1]),this.setSuccess=b(a[0])},link:function(c,d,e,f){function g(){k.$dirty&&"change"===m.triggerOn&&i()}function h(a,b){b!==a&&i()}function i(){k.$validate();var c=[],d=Object.keys(k.$error);angular.forEach(d,function(b){c.push({message:b,type:l.$messages[b]&&l.$messages[b].type||a[3]})}),m.validate(e.name,c,b.determineMessageType(c))}function j(a){return"submit"===m.triggerOn&&m.validate(e.name,[]),a}var k=f[0],l=f[1],m=f[2],n=f[3];c.$watchCollection(n.$name+'["'+k.$name+'"].$error',g),c.$watch(e.afTrigger,h),k.$parsers.push(j),c.$on("validate",i)}}}]),angular.module("angularFormMessages").directive("afMessage",["MessageService",function(a){return{scope:!0,link:function(b,c,d){a.validation(d.afMessage,function(a){b.messages=a})}}}]),angular.module("angularFormMessages",[]),angular.module("angularFormMessagesBootstrap",["angularFormMessages"]),angular.module("angularFormMessages").directive("afSubmit",["$rootScope","MessageService",function(a,b){return{require:"afSubmit",controller:["$scope",function(b){this.validations={},this.validate=function(c,d,e){this.validations[c]=d,b.validations=this.validations,a.$broadcast("validation",c,d,e)},this.isValid=function(){for(var a in this.validations){var b=this.validations[a];if(b.length)return!1}return!0}}],link:function(a,c,d,e){function f(a){return angular.isObject(a)&&"function"==typeof a.then}function g(c){c.preventDefault(),a.$broadcast("validate"),a.$apply(function(){function c(a){angular.forEach(a.validation,function(a,c){e.validate(c,a,b.determineMessageType(a))})}if(e.isValid()){var g=a.$eval(d.afSubmit);f(g)&&(a.isSubmitting=!0,g["catch"](c)["finally"](function(){a.isSubmitting=!1}))}})}c.on("submit",g),e.triggerOn=d.afTriggerOn||"change",a.$watch(d.afShowSuccess,function(a){e.showSuccess=!!a})}}}]),angular.module("angularFormMessages").directive("afSubmitButton",function(){return{link:function(a,b,c){a.$watch("isSubmitting",function(a){c.$set("disabled",a?"disabled":void 0)})}}}),angular.module("angularFormMessages").constant("MESSAGE_TYPES",["SUCCESS","INFO","WARNING","ERROR"]).factory("MessageService",["$rootScope","MESSAGE_TYPES",function(a,b){return{determineMessageType:function(a){var c=-1;return angular.forEach(a,function(a){var d=b.indexOf(a.type);d>c&&(c=d)}),-1===c?void 0:b[c]},validation:function(b,c){a.$on("validation",function(a,d,e,f){d===b&&c(e,f)})}}}]),angular.module("angularFormMessages").run(["$templateCache",function(a){"use strict";a.put("templates/messageDirective.html",'<span class="glyphicon form-control-feedback" ng-class="icon" aria-hidden="true" ng-if="messageType"></span>\n<span class="sr-only">({{messageType}}))</span>\n<div class="alert help-block" ng-class="message.alertClass" ng-style="{ \'margin-bottom\': $last ? undefined : \'0px\' }" role="alert" ng-repeat="message in messages track by $index">\n  <span class="glyphicon" ng-class="message.icon" aria-hidden="true"></span>\n  <span class="sr-only">{{message.type}}:</span>\n  {{message.message}}\n</div>\n')}]);