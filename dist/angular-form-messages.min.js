angular.module("angularFormMessages").directive("afError",function(){return{require:"^afFieldWrap",scope:!0,link:function(a,b,c,d){a.$on("validation",function(b,c,e){c===d.messageId&&(a.messages=e)})}}}),angular.module("angularFormMessages").directive("afField",["MESSAGE_TYPES","MessageService",function(a,b){return{priority:100,require:["ngModel","afField","^afFieldWrap","^afSubmit","^form"],controller:function(){function b(a){return function(b){this.$messages[b]={type:a}}}this.$messages={},this.setError=b(a[3]),this.setWarning=b(a[2]),this.setInfo=b(a[1]),this.setSuccess=b(a[0])},link:function(c,d,e,f){function g(){k.$dirty&&"change"===n.triggerOn&&i()}function h(a,b){b!==a&&i()}function i(){k.$validate();var c=[],d=Object.keys(k.$error);angular.forEach(d,function(b){c.push({message:b,type:l.$messages[b]&&l.$messages[b].type||a[3]})}),n.validate(m.messageId,c,b.determineMessageType(c))}function j(a){return"submit"===n.triggerOn&&n.validate(m.messageId,[]),a}var k=f[0],l=f[1],m=f[2],n=f[3],o=f[4];c.$watchCollection(o.$name+'["'+k.$name+'"].$error',g),c.$watch(e.afTrigger,h),k.$parsers.push(j),c.$on("validate",i)}}}]),angular.module("angularFormMessages").directive("afFieldWrap",function(){return{require:["afFieldWrap","^form"],controller:function(){},compile:function(){return{pre:function(a,b,c,d){var e=d[0],f=d[1];e.messageId=c.afFieldWrap,a[f.$name]=f}}}}}),angular.module("angularFormMessages",[]),angular.module("angularFormMessages").directive("afSubmit",["MessageService",function(a){return{require:"afSubmit",controller:["$scope",function(a){this.validations={},this.validate=function(b,c,d){this.validations[b]=c,a.validations=this.validations,a.$broadcast("validation",b,c,d)},this.isValid=function(){for(var a in this.validations){var b=this.validations[a];if(b.length)return!1}return!0}}],link:function(b,c,d,e){function f(a){return angular.isObject(a)&&"function"==typeof a.then}function g(c){c.preventDefault(),b.$broadcast("validate"),b.$apply(function(){function c(b){angular.forEach(b.validation,function(b,c){e.validate(c,b,a.determineMessageType(b))})}if(e.isValid()){var g=b.$eval(d.afSubmit);f(g)&&(b.isSubmitting=!0,g["catch"](c)["finally"](function(){b.isSubmitting=!1}))}})}c.on("submit",g),e.triggerOn=d.afTriggerOn||"change",b.$watch(d.afShowSuccess,function(a){e.showSuccess=!!a})}}}]),angular.module("angularFormMessages").directive("afSubmitButton",function(){return{link:function(a,b,c){a.$watch("isSubmitting",function(a){c.$set("disabled",a?"disabled":void 0)})}}}),angular.module("angularFormMessages").constant("MESSAGE_TYPES",["SUCCESS","INFO","WARNING","ERROR"]).factory("MessageService",["MESSAGE_TYPES",function(a){return{determineMessageType:function(b){var c=-1;return angular.forEach(b,function(b){var d=a.indexOf(b.type);d>c&&(c=d)}),-1===c?void 0:a[c]}}}]);