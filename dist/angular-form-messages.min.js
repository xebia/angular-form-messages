angular.module("angularFormMessages").directive("afError",function(){return{require:"^afFieldWrap",scope:!0,link:function(a,b,c,d){a.$on("validation",function(b,c,e){c===d.messageId&&(a.messages=e)})}}}),angular.module("angularFormMessages").directive("afField",function(){return{priority:100,require:["ngModel","afField","^afFieldWrap","^afSubmit","^form"],controller:function(){function a(a){return function(b){this.$messages[b]={type:a}}}this.$messages={},this.setError=a("error"),this.setWarning=a("warning"),this.setInfo=a("info"),this.setSuccess=a("success")},link:function(a,b,c,d){function e(){i.$dirty&&"change"===l.triggerOn&&g()}function f(a,b){b!==a&&g()}function g(){i.$validate();var a=[],b=Object.keys(i.$error);angular.forEach(b,function(b){a.push({message:b,type:j.$messages[b]&&j.$messages[b].type||"error"})}),l.validate(k.messageId,a)}function h(a){return"submit"===l.triggerOn&&l.validate(k.messageId,[]),a}var i=d[0],j=d[1],k=d[2],l=d[3],m=d[4];a.$watchCollection(m.$name+'["'+i.$name+'"].$error',e),a.$watch(c.afTrigger,f),i.$parsers.push(h),a.$on("validate",g)}}}),angular.module("angularFormMessages").directive("afFieldWrap",function(){return{require:["afFieldWrap","^form"],controller:function(){},compile:function(){return{pre:function(a,b,c,d){var e=d[0],f=d[1];e.messageId=c.afFieldWrap,a[f.$name]=f}}}}}),angular.module("angularFormMessages",[]),angular.module("angularFormMessages").directive("afSubmit",function(){return{require:"afSubmit",controller:["$scope",function(a){this.validations={},this.validate=function(b,c){this.validations[b]=c,a.validations=this.validations,a.$broadcast("validation",b,c)},this.isValid=function(){for(var a in this.validations){var b=this.validations[a];if(b.length)return!1}return!0}}],link:function(a,b,c,d){function e(a){return angular.isObject(a)&&"function"==typeof a.then}function f(b){b.preventDefault(),a.$broadcast("validate"),a.$apply(function(){function b(a){angular.forEach(a.validation,function(a,b){d.validate(b,a)})}if(d.isValid()){var f=a.$eval(c.afSubmit);e(f)&&(a.isSubmitting=!0,f["catch"](b)["finally"](function(){a.isSubmitting=!1}))}})}b.on("submit",f),d.triggerOn=c.afTriggerOn||"change",a.$watch(c.afShowSuccess,function(a){d.showSuccess=!!a})}}}),angular.module("angularFormMessages").directive("afSubmitButton",function(){return{link:function(a,b,c){a.$watch("isSubmitting",function(a){c.$set("disabled",a?"disabled":void 0)})}}});